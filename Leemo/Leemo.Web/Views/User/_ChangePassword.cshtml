@model Leemo.Model.InputModels.InputChangePassword

<div class="tab-pane fade active show" id="pro-password" role="tabpanel" aria-labelledby="password-tab">
    <div class="card-style big-space">
        <h2 class="info-heading">Change Your Password</h2>
        <div class="password-form">
            <form id="ChangePassword" class="needs-validation" novalidate="">
                <input type="hidden" asp-for="@Model.Email" />
                @Html.AntiForgeryToken()

                <div class="form-group form-row">
                    <label class="info-label col-sm-4 mb-sm-0 mt-2">Old Password</label>
                    <div class="col">
                        <input type="password" class="form-control form-style-1" asp-for="@Model.OldPassword" required="">
                        <span asp-validation-for="@Model.OldPassword" class="text-danger" />
                        <div class="invalid-feedback">
                            Password Required
                        </div>
                    </div>
                </div>
                <div class="form-group form-row">
                    <label class="info-label col-sm-4 mb-sm-0 mt-2">New Password</label>
                    <div class="col">
                        <input type="password" class="form-control form-style-1" id="password" asp-for="@Model.NewPassword" required="">
                        <span asp-validation-for="@Model.NewPassword" class="text-danger" />
                        <div class="invalid-feedback">
                            Password Required
                        </div>
                    </div>
                </div>
                <div class="pswd_info form-group form-row" style="display: none;">
                    <div class="col col-sm-8 offset-sm-4">

                        <!--<label class="info-label text-dark">-->@*Password must meet the following requirements:*@<!--</label>-->
                        <ul>
                            <li id="length" class="invalid">Minimum <strong>8 characters</strong></li>
                            <li id="capital" class="invalid">Minimum <strong>one capital letter</strong></li>
                            <li id="letter" class="invalid">Minimum <strong>One lowercase letter</strong></li>
                            <li id="special" class="invalid">Minimum <strong>one special character</strong></li>
                            <li id="number" class="invalid">Minimum <strong>one numeric digit</strong></li>
                        </ul>
                    </div>
                </div>
                <div class="form-group form-row">
                    <label class="info-label col-sm-4 mb-sm-0 mt-2">Confirm Password</label>
                    <div class="col">
                        <input type="password" class="form-control form-style-1"  asp-for="@Model.ConfirmPassword" required="">
                        <span asp-validation-for="@Model.ConfirmPassword" class="text-danger" />
                        <div class="invalid-feedback">
                            Password Required
                        </div>
                    </div>
                </div>
                <div class="pt-2 form-row">
                    <div class="col offset-sm-4">
                        <button class="btn-primary btn-sm-style btn-lg passwordButton" onclick="UpdateChangePassword(this)">Save</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script type="text/javascript">

    $(document).ready(function () {
        var password = [];
        var password2 = [];


        $(document).ready(function () {
            password = $('#password');
        

            var ruleValidator = function () {
                var pswd = $(this).val();
                //gets what is being input in the field and sets as variable

                if (pswd.length < 8) {
                    $('#length').removeClass('valid').addClass('invalid');
                } else {
                    $('#length').removeClass('invalid').addClass('valid');
                }

                // letter
                if (pswd.match(/[a-z]/)) {
                    $('#letter').removeClass('invalid').addClass('valid');
                } else {
                    $('#letter').removeClass('valid').addClass('invalid');
                }

                // Capital
                if (pswd.match(/[A-Z]/)) {
                    $('#capital').removeClass('invalid').addClass('valid');
                } else {
                    $('#capital').removeClass('valid').addClass('invalid');

                }

                // number
                if (pswd.match(/\d/)) {
                    $('#number').removeClass('invalid').addClass('valid');
                } else {
                    $('#number').removeClass('valid').addClass('invalid');
                }

                // character
                if (pswd.match(/[$&+,:;=@@?#|'<>.^*()%!-]/)) {
                    $('#special').removeClass('invalid').addClass('valid');
                } else {
                    $('#special').removeClass('valid').addClass('invalid');
                }
            }

            password.focus(function () {
                // (triggers whenever the password field is selected by the user)
                $('.pswd_info').slideDown();
            });
          
            password.keyup(ruleValidator);
        });
    });

</script>