// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using DynamicFormsCore.Common;
using DynamicFormsCore.Models;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DynamicFormsCore
{
    [Table("DataFormField")]
    public partial class DataFormField
    {
        //public DataFormField()
        //{
        //    DataFormSubmissionItem = new HashSet<DataFormSubmissionItem>();
        //}

        [Key]
        public Guid Id { get; set; }

        [Required]
        [StringLength(150)]
        public string FieldName { get; set; }

        [Required]
        [StringLength(150)]
        public string FieldDisplayLabel { get; set; }

        public string FieldXML { get; set; }

        public Guid DataFormFieldTypeId { get; set; }

        public Guid DataFormSectionId { get; set; }

        public string AttributeCheckedValue { get; set; }

        public string AttributeDisabledValue { get; set; }

        public string AttributeMaxValue { get; set; }

        public string AttributeMinValue { get; set; }

        public string AttributeMaxlengthValue { get; set; }

        public string AttributePatternValue { get; set; }

        public string AttributeReadonlyValue { get; set; }

        public string AttributeRequiredValue { get; set; }

        public string AttributeSizeValue { get; set; }

        public string AttributeStepValue { get; set; }

        public string AttributeValueValue { get; set; }

        //[ForeignKey(nameof(DataFormFieldTypeId))]
        //[InverseProperty("DataFormField")]
        public virtual DataFormFieldType DataFormFieldType { get; set; }

        //[ForeignKey(nameof(DataFormSectionId))]
        //[InverseProperty("DataFormField")]
        //public virtual DataFormSection DataFormSection { get; set; }

        //[InverseProperty("DataFormField")]
        //public virtual ICollection<DataFormSubmissionItem> DataFormSubmissionItem { get; set; }
        [NotMapped]
        public Control ControlXML { get; set; }

        [NotMapped]
        public FormInputType InputType { get; set; }

        [NotMapped]
        public string FieldValue { get; set; }
    }
}